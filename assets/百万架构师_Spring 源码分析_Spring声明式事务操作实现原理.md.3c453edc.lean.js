import{_ as s,o as a,h as n,Q as e}from"./chunks/framework.da611722.js";const o="/assets/事务操作流程.89374082.png",l="/assets/Connection.853c3853.png",p="/assets/Connection不同的实现.5d4a41fe.png",t="/assets/connection-DataSource.833fab7d.png",C=JSON.parse('{"title":"Spring声明式事务操作实现原理 | JavaGuide","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://javaguide.net/百万架构师/Spring 源码分析/Spring声明式事务操作实现原理.html"}],["meta",{"name":"keywords","content":"Spring声明式事务操作实现原理 , JavaGuide , JavaGuide官网, Java面试指南, Java基础, 多线程, JVM, 虚拟机, 数据库, MySQL, Spring, Redis, MyBatis, 系统设计, 分布式, RPC, 高可用, 高并发"}],["meta",{"name":"og:url","content":"https://JavaGuide.net"}],["meta",{"name":"og:type","content":"website"}],["meta",{"name":"og:image","content":"https://javaguide.net/JavaGuide-og.png"}],["meta",{"name":"og:title","content":"Spring声明式事务操作实现原理 | JavaGuide | Java面试指南 | JavaGuide官网"}],["meta",{"name":"og:description","content":"Spring声明式事务操作实现原理 | JavaGuide | Java面试指南 | JavaGuide官网 | 「JavaGuide.net」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide.net ！"}],["meta",{"name":"twitter:site","content":"https://javaguide.net"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:creator","content":"nogeek.cn"}],["meta",{"name":"twitter:title","content":"Spring声明式事务操作实现原理 | JavaGuide | Java面试指南 | JavaGuide官网"}],["meta",{"name":"twitter:description","content":"Spring声明式事务操作实现原理 | JavaGuide | Java面试指南 | JavaGuide官网 | 「JavaGuide.net」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide.net ！"}],["meta",{"name":"twitter:image","content":"https://javaguide.net/JavaGuide-og.png"}],["meta",{"name":"sogou_site_verification","content":"fcAkazTXFd"}],["meta",{"name":"baidu-site-verification","content":"codeva-MXEPYsXKGk"}],["meta",{"name":"msvalidate.01","content":"9F2D57CFC59E8031212A166878638B15"}]]},"headers":[],"relativePath":"百万架构师/Spring 源码分析/Spring声明式事务操作实现原理.md","filePath":"百万架构师/Spring 源码分析/Spring声明式事务操作实现原理.md","lastUpdated":1741277271000}'),c={name:"百万架构师/Spring 源码分析/Spring声明式事务操作实现原理.md"},r=e("",39),i=[r];function E(y,d,u,m,b,g){return a(),n("div",null,i)}const S=s(c,[["render",E]]);export{C as __pageData,S as default};
