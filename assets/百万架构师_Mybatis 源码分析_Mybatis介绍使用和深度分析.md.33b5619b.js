import{_ as s,o as a,h as n,Q as l}from"./chunks/framework.da611722.js";const p="/assets/JDBC的连接.a8d6b5e5.png",o="/assets/MyBatis架构.e83b28a7.png",b=JSON.parse('{"title":"Mybatis介绍使用和深度分析 | JavaGuide","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://JavaGuide.net/百万架构师/Mybatis 源码分析/Mybatis介绍使用和深度分析.html"}],["meta",{"name":"keywords","content":"Mybatis介绍使用和深度分析 , JavaGuide , JavaGuide官网, Java面试指南, Java基础, 多线程, JVM, 虚拟机, 数据库, MySQL, Spring, Redis, MyBatis, 系统设计, 分布式, RPC, 高可用, 高并发"}],["meta",{"name":"og:url","content":"https://JavaGuide.net"}],["meta",{"name":"og:type","content":"website"}],["meta",{"name":"og:image","content":"https://JavaGuide.net/JavaGuide-og.png"}],["meta",{"name":"og:title","content":"Mybatis介绍使用和深度分析 | JavaGuide | Java面试指南 | JavaGuide官网"}],["meta",{"name":"og:description","content":"Mybatis介绍使用和深度分析 | JavaGuide | Java面试指南 | JavaGuide官网 | 「JavaGuide.net」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide.net ！"}],["meta",{"name":"twitter:site","content":"https://JavaGuide.net"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:creator","content":"nogeek.cn"}],["meta",{"name":"twitter:title","content":"Mybatis介绍使用和深度分析 | JavaGuide | Java面试指南 | JavaGuide官网"}],["meta",{"name":"twitter:description","content":"Mybatis介绍使用和深度分析 | JavaGuide | Java面试指南 | JavaGuide官网 | 「JavaGuide.net」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide.net ！"}],["meta",{"name":"twitter:image","content":"https://JavaGuide.net/JavaGuide-og.png"}],["meta",{"name":"sogou_site_verification","content":"fcAkazTXFd"}],["meta",{"name":"baidu-site-verification","content":"codeva-MXEPYsXKGk"}],["meta",{"name":"msvalidate.01","content":"9F2D57CFC59E8031212A166878638B15"}]]},"headers":[],"relativePath":"百万架构师/Mybatis 源码分析/Mybatis介绍使用和深度分析.md","filePath":"百万架构师/Mybatis 源码分析/Mybatis介绍使用和深度分析.md","lastUpdated":1741277271000}'),e={name:"百万架构师/Mybatis 源码分析/Mybatis介绍使用和深度分析.md"},t=l(`<h1 id="一、认识mybatis" tabindex="-1">一、认识MyBatis <a class="header-anchor" href="#一、认识mybatis" aria-label="Permalink to &quot;一、认识MyBatis&quot;">​</a></h1><h2 id="mybatis-是什么" tabindex="-1">MyBatis 是什么？ <a class="header-anchor" href="#mybatis-是什么" aria-label="Permalink to &quot;MyBatis 是什么？&quot;">​</a></h2><blockquote><h3 id="what-is-mybatis" tabindex="-1">What is MyBatis? <a class="header-anchor" href="#what-is-mybatis" aria-label="Permalink to &quot;What is MyBatis?&quot;">​</a></h3><p>MyBatis is a first class persistence framework with support for custom SQL, stored procedures and advanced mappings. MyBatis eliminates almost all of the JDBC code and manual setting of parameters and retrieval of results. MyBatis can use simple XML or Annotations for configuration and map primitives, Map interfaces and Java POJOs (Plain Old Java Objects) to database records.</p><p>MyBatis 是一个一流的持久性框架，它支持定制SQL、存储过程和高级映射。<strong>（是什么）</strong></p><p>MyBatis 消除了几乎所有的JDBC代码和参数的手动设置和结果的检索。<strong>（优势）</strong></p><p>MyBatis 可以使用简单的XML或注释来进行配置和映射原语，映射接口和Java pojo（普通旧式Java对象）到数据库记录。 <strong>（怎么做到的）</strong></p></blockquote><h2 id="对比-jdbc-和-mybatis" tabindex="-1">对比 JDBC 和 MyBatis <a class="header-anchor" href="#对比-jdbc-和-mybatis" aria-label="Permalink to &quot;对比 JDBC 和 MyBatis&quot;">​</a></h2><p>MyBatis使用需要一个动词（TestMapper），一个名词（Test），</p><h3 id="jdbc" tabindex="-1">JDBC <a class="header-anchor" href="#jdbc" aria-label="Permalink to &quot;JDBC&quot;">​</a></h3><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Class.</span><span style="color:#B392F0;">forName</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            connection </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> DriverManager.</span><span style="color:#B392F0;">getConnection</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;jdbc:mysql://localhost:3306/gp?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;root&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;123456&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            preparedStatement </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> connection.</span><span style="color:#B392F0;">prepareStatement</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;SELECT * FROM test WHERE id = ?&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            preparedStatement.</span><span style="color:#B392F0;">setInt</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, id);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Class.</span><span style="color:#6F42C1;">forName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            connection </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> DriverManager.</span><span style="color:#6F42C1;">getConnection</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;jdbc:mysql://localhost:3306/gp?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;root&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;123456&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            preparedStatement </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> connection.</span><span style="color:#6F42C1;">prepareStatement</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;SELECT * FROM test WHERE id = ?&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            preparedStatement.</span><span style="color:#6F42C1;">setInt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, id);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="mybatis" tabindex="-1">MyBatis <a class="header-anchor" href="#mybatis" aria-label="Permalink to &quot;MyBatis&quot;">​</a></h3><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">TestMapper testMapper </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sqlSession.</span><span style="color:#B392F0;">getMapper</span><span style="color:#E1E4E8;">(TestMapper.class);</span></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> testMapper.</span><span style="color:#B392F0;">insert</span><span style="color:#E1E4E8;">(test);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">TestMapper testMapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sqlSession.</span><span style="color:#6F42C1;">getMapper</span><span style="color:#24292E;">(TestMapper.class);</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> testMapper.</span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(test);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="jdbc的连接-png" tabindex="-1">==JDBC的连接.png== <a class="header-anchor" href="#jdbc的连接-png" aria-label="Permalink to &quot;==JDBC的连接.png==&quot;">​</a></h5><p><img src="`+p+'" alt="JDBC的连接"></p><h5 id="mybatis架构-png" tabindex="-1">==MyBatis架构.png== <a class="header-anchor" href="#mybatis架构-png" aria-label="Permalink to &quot;==MyBatis架构.png==&quot;">​</a></h5><p><img src="'+o+`" alt="MyBatis架构"></p><h1 id="二、使用-mybatis" tabindex="-1">二、使用 Mybatis <a class="header-anchor" href="#二、使用-mybatis" aria-label="Permalink to &quot;二、使用 Mybatis&quot;">​</a></h1><h2 id="使用过程" tabindex="-1">使用过程 <a class="header-anchor" href="#使用过程" aria-label="Permalink to &quot;使用过程&quot;">​</a></h2><p>​ 可以采用 XML 的形式来配置，还可以采用 Annotation 的形式来配置</p><p>在一开始，每一个 XML 的 name 都对应 JAVA 实体类的一个属性！</p><h3 id="_1-编程式" tabindex="-1">1. 编程式 <a class="header-anchor" href="#_1-编程式" aria-label="Permalink to &quot;1. 编程式&quot;">​</a></h3><h3 id="_2-集成式-managed-集成到-spring" tabindex="-1">2. 集成式 managed （集成到 Spring） <a class="header-anchor" href="#_2-集成式-managed-集成到-spring" aria-label="Permalink to &quot;2. 集成式 managed （集成到 Spring）&quot;">​</a></h3><h5 id="mybatis-编程式的代码" tabindex="-1">Mybatis 编程式的代码 <a class="header-anchor" href="#mybatis-编程式的代码" aria-label="Permalink to &quot;Mybatis 编程式的代码&quot;">​</a></h5><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> SqlSession </span><span style="color:#B392F0;">getSqlSession</span><span style="color:#E1E4E8;">() throws FileNotFoundException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//配置文件</span></span>
<span class="line"><span style="color:#E1E4E8;">    InputStream configFile </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FileInputStream</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;E:</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">workspace</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">code</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">git</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">gupaoedu-mybatis</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">src</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">main</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">java</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">com</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">gupaoedu</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">mybatis</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">demo</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">mybatis-config.xml&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    SqlSessionFactory sqlSessionFactory </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SqlSessionFactoryBuilder</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">(configFile);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//加载配置文件得到SqlSessionFactory</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> sqlSessionFactory.</span><span style="color:#B392F0;">openSession</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] args) throws FileNotFoundException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    TestMapper testMapper </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getSqlSession</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getMapper</span><span style="color:#E1E4E8;">(TestMapper.class);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Test test </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> testMapper.</span><span style="color:#B392F0;">selectByPrimaryKey</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> SqlSession </span><span style="color:#6F42C1;">getSqlSession</span><span style="color:#24292E;">() throws FileNotFoundException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//配置文件</span></span>
<span class="line"><span style="color:#24292E;">    InputStream configFile </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FileInputStream</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;E:</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">workspace</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">code</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">git</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">gupaoedu-mybatis</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">src</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">main</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">java</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">com</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">gupaoedu</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">mybatis</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">demo</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">mybatis-config.xml&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    SqlSessionFactory sqlSessionFactory </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SqlSessionFactoryBuilder</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">(configFile);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//加载配置文件得到SqlSessionFactory</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> sqlSessionFactory.</span><span style="color:#6F42C1;">openSession</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] args) throws FileNotFoundException {</span></span>
<span class="line"><span style="color:#24292E;">    TestMapper testMapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getSqlSession</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getMapper</span><span style="color:#24292E;">(TestMapper.class);</span></span>
<span class="line"><span style="color:#24292E;">    Test test </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> testMapper.</span><span style="color:#6F42C1;">selectByPrimaryKey</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h5 id="coc-coversation-over-configuration" tabindex="-1">COC：coversation over configuration <a class="header-anchor" href="#coc-coversation-over-configuration" aria-label="Permalink to &quot;COC：coversation over configuration&quot;">​</a></h5><p><strong>约定优于配置。</strong></p><h5 id="mybatis-连接的过程-png" tabindex="-1">==MyBatis 连接的过程.png== <a class="header-anchor" href="#mybatis-连接的过程-png" aria-label="Permalink to &quot;==MyBatis 连接的过程.png==&quot;">​</a></h5><p>![MyBatis 连接的过程](assets/MyBatis 连接的过程.png)</p><h3 id="_3-工作当中的使用方式" tabindex="-1">3. 工作当中的使用方式： <a class="header-anchor" href="#_3-工作当中的使用方式" aria-label="Permalink to &quot;3. 工作当中的使用方式：&quot;">​</a></h3><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">graph</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LR</span></span>
<span class="line"><span style="color:#FFAB70;">分析业务</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">分析业务</span><span style="color:#F97583;">]--&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">定义表结构</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">定义表结构</span><span style="color:#F97583;">]</span></span>
<span class="line"><span style="color:#FFAB70;">定义表结构</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">定义表结构</span><span style="color:#F97583;">]--&gt;</span><span style="color:#FFAB70;">generotor生成我们所需要的类</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">generotor生成我们所需要的类</span><span style="color:#F97583;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">graph</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LR</span></span>
<span class="line"><span style="color:#E36209;">分析业务</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">分析业务</span><span style="color:#D73A49;">]--&gt;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">定义表结构</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">定义表结构</span><span style="color:#D73A49;">]</span></span>
<span class="line"><span style="color:#E36209;">定义表结构</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">定义表结构</span><span style="color:#D73A49;">]--&gt;</span><span style="color:#E36209;">generotor生成我们所需要的类</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">generotor生成我们所需要的类</span><span style="color:#D73A49;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_4-generator" tabindex="-1">4. Generator <a class="header-anchor" href="#_4-generator" aria-label="Permalink to &quot;4.  Generator&quot;">​</a></h3><ol><li><p>pom.xml 配置 generator 插件</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.mybatis.generator&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;mybatis-generator-maven-plugin&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.3.3&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">configurationFile</span><span style="color:#E1E4E8;">&gt;\${project.basedir}/src/main/resources/mybatis/generatorConfig.xml&lt;/</span><span style="color:#85E89D;">configurationFile</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.mybatis.generator&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;mybatis-generator-maven-plugin&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;1.3.3&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">configurationFile</span><span style="color:#24292E;">&gt;\${project.basedir}/src/main/resources/mybatis/generatorConfig.xml&lt;/</span><span style="color:#22863A;">configurationFile</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>配置 generatorConfig.xml</p></li><li><p>执行 mvn mybatis-generator:generate</p></li><li><p>生成 Bean 和 Example</p></li></ol><h5 id="要分包-防止出错-逆向生成的文件和工程里的要分开" tabindex="-1">要分包，防止出错（逆向生成的文件和工程里的要分开） <a class="header-anchor" href="#要分包-防止出错-逆向生成的文件和工程里的要分开" aria-label="Permalink to &quot;要分包，防止出错（逆向生成的文件和工程里的要分开）&quot;">​</a></h5><blockquote><p>​ <strong>当 自动生成的文件和平时用的放到一起的时候，每一次逆向生成文件都容易和以前的产生冲突，每一次的回滚都是非常痛苦的。</strong></p><p>​ <strong>我们能不能用架构来驾驭人，有些人你怎么说都没用，我就用一些规范来规范你，你要生成去另一个包里边去生成，永远不可能损害到我工程里边，防患于未然。有些人不是爱乱搞，他就是不会。</strong></p></blockquote><h5 id="example-的简单使用例子" tabindex="-1"><code>Example</code> 的简单使用例子 <a class="header-anchor" href="#example-的简单使用例子" aria-label="Permalink to &quot;\`Example\` 的简单使用例子&quot;">​</a></h5><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Test</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">example</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    TestExample example </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TestExample</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    example.</span><span style="color:#B392F0;">setLimitClause</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;0,10&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">com</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">gupao</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">dal</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">dao</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">Test</span><span style="color:#E1E4E8;">&gt; tests </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> mapper.</span><span style="color:#B392F0;">selectByExample</span><span style="color:#E1E4E8;">(example);</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(tests.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Test</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">example</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    TestExample example </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TestExample</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    example.</span><span style="color:#6F42C1;">setLimitClause</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;0,10&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">com</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">gupao</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">dal</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">dao</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">Test</span><span style="color:#24292E;">&gt; tests </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mapper.</span><span style="color:#6F42C1;">selectByExample</span><span style="color:#24292E;">(example);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(tests.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h5 id="example-的不好的原因" tabindex="-1"><code>Example</code> 的不好的原因 <a class="header-anchor" href="#example-的不好的原因" aria-label="Permalink to &quot;\`Example\` 的不好的原因&quot;">​</a></h5><blockquote><p>​ <strong>大公司会有 DBA，他会去审查你的 SQL 语句，你要将你的 SQL 语句 + Mapper 都发给 DBA，然后让他帮你建表，然后过一遍。</strong></p><p>​ <strong>然后你直接不用再写了 SQL，然后 DBA 也没办法审查你的 SQL 了。</strong></p><p>​ <code>example.createCriteria().andIdEqualTo(11).andNameEqualTo(&quot;&quot;);</code> 和 <code>example.createCriteria().andNameEqualTo(&quot;&quot;).andIdEqualTo(11);</code> 如果你建了<strong>索引</strong>，他是完全不同的速度 **。一个命中索引，一个没有命中索引。**很难查到这个问题，</p></blockquote><h3 id="_5-作用域-scope-生命周期" tabindex="-1">5. 作用域 SCOPE-生命周期 <a class="header-anchor" href="#_5-作用域-scope-生命周期" aria-label="Permalink to &quot;5. 作用域 SCOPE-生命周期&quot;">​</a></h3><table><thead><tr><th></th><th>Scope</th></tr></thead><tbody><tr><td>SqlSessionFactoryBuilder</td><td>method</td></tr><tr><td>SqlSessionFactory</td><td>application</td></tr><tr><td>SqlSession</td><td>request/method （可以 认为是线程级）</td></tr><tr><td>Mapper</td><td>method</td></tr></tbody></table><p>​ <code>SqlSessionFactoryBuilder</code> 用一次，就返回了</p><blockquote><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//配置文件</span></span>
<span class="line"><span style="color:#E1E4E8;">InputStream configFile </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FileInputStream</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;E:</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">workspace</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">code</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">git</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">gupaoedu-mybatis</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">src</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">main</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">java</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">com</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">gupaoedu</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">mybatis</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">demo</span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;">mybatis-config.xml&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">SqlSessionFactory sqlSessionFactory </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SqlSessionFactoryBuilder</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">(configFile);</span></span>
<span class="line"><span style="color:#6A737D;">//加载配置文件得到SqlSessionFactory</span></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> sqlSessionFactory.</span><span style="color:#B392F0;">openSession</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//配置文件</span></span>
<span class="line"><span style="color:#24292E;">InputStream configFile </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FileInputStream</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;E:</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">workspace</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">code</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">git</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">gupaoedu-mybatis</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">src</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">main</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">java</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">com</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">gupaoedu</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">mybatis</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">demo</span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;">mybatis-config.xml&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">SqlSessionFactory sqlSessionFactory </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SqlSessionFactoryBuilder</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">(configFile);</span></span>
<span class="line"><span style="color:#6A737D;">//加载配置文件得到SqlSessionFactory</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> sqlSessionFactory.</span><span style="color:#6F42C1;">openSession</span><span style="color:#24292E;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></blockquote><p>​ <code>SqlSessionFactory</code> 它是全局性的。</p><p>​ <code>SqlSession</code> 是一个方法，一次<code>Request</code> 和 <code>Response</code> 建立一次 SqlSession，可以认为是 <strong>线程级别</strong>的。</p><p>​ <code>Mapper</code> method</p><h3 id="_6-mapper-的-xml-和-annotation-形式" tabindex="-1">6. Mapper 的 xml 和 annotation 形式 <a class="header-anchor" href="#_6-mapper-的-xml-和-annotation-形式" aria-label="Permalink to &quot;6. Mapper 的 xml 和 annotation 形式&quot;">​</a></h3><h5 id="一个-接口对应一个-xml" tabindex="-1">一个 接口对应一个 XML <a class="header-anchor" href="#一个-接口对应一个-xml" aria-label="Permalink to &quot;一个 接口对应一个 XML&quot;">​</a></h5><p>Interface</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Test </span><span style="color:#B392F0;">selectByPrimaryKey</span><span style="color:#E1E4E8;">(Integer id);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Test </span><span style="color:#6F42C1;">selectByPrimaryKey</span><span style="color:#24292E;">(Integer id);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>XML</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;selectByPrimaryKey&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parameterType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;java.lang.Integer&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">resultMap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;BaseResultMap&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    select</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">include</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">refid</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;Base_Column_List&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    from test</span></span>
<span class="line"><span style="color:#E1E4E8;">    where id = #{id,jdbcType=INTEGER}</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">select</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;selectByPrimaryKey&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;java.lang.Integer&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">resultMap</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;BaseResultMap&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    select</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">include</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">refid</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;Base_Column_List&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">    from test</span></span>
<span class="line"><span style="color:#24292E;">    where id = #{id,jdbcType=INTEGER}</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">select</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h5 id="annotation-注解形式" tabindex="-1">annotation 注解形式 <a class="header-anchor" href="#annotation-注解形式" aria-label="Permalink to &quot;annotation 注解形式&quot;">​</a></h5><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Select</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;select * from test where id = 2&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">Test </span><span style="color:#B392F0;">selectByPrimaryKey</span><span style="color:#E1E4E8;">(Integer id);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Select</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;select * from test where id = 2&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">Test </span><span style="color:#6F42C1;">selectByPrimaryKey</span><span style="color:#24292E;">(Integer id);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="xml-形式和-annotation-是兼容的吗" tabindex="-1">XML 形式和 Annotation 是兼容的吗？ <a class="header-anchor" href="#xml-形式和-annotation-是兼容的吗" aria-label="Permalink to &quot;XML 形式和 Annotation 是兼容的吗？&quot;">​</a></h5><p>​ <strong>是互补式的兼容，没有优先，--&gt; 是一种互补的形式。</strong></p><p>同时存在启动会报错</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Mapped</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Statements</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">collection</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">already</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">contains</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">value</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">for</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">com.darian.dal.dao.Testmapper.selectByPrimaryKey</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Mapped</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Statements</span><span style="color:#24292E;"> </span><span style="color:#032F62;">collection</span><span style="color:#24292E;"> </span><span style="color:#032F62;">already</span><span style="color:#24292E;"> </span><span style="color:#032F62;">contains</span><span style="color:#24292E;"> </span><span style="color:#032F62;">value</span><span style="color:#24292E;"> </span><span style="color:#032F62;">for</span><span style="color:#24292E;"> </span><span style="color:#032F62;">com.darian.dal.dao.Testmapper.selectByPrimaryKey</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="pros-vs-cons" tabindex="-1">PROS <strong>VS</strong> cons <a class="header-anchor" href="#pros-vs-cons" aria-label="Permalink to &quot;PROS  **VS** cons&quot;">​</a></h5><table><thead><tr><th></th><th>Pros</th><th>Cons</th></tr></thead><tbody><tr><td>Mapper.xml</td><td>1. 跟接口分离、统一管理<br>2. 复杂的语句可以不影响接口的可读性</td><td>1. 过多的 XML 文件</td></tr><tr><td>Annotation</td><td>1. 接口就能够看到 Sql 语句，可读性高，不需要再去找 xml 文件，方便</td><td>1. 复杂的联合查询不好维护，代码的可读性差。</td></tr></tbody></table><h3 id="_7-mybatis-配置文件-config-文件部分解读" tabindex="-1">7.MyBatis 配置文件 Config 文件部分解读 <a class="header-anchor" href="#_7-mybatis-配置文件-config-文件部分解读" aria-label="Permalink to &quot;7.MyBatis 配置文件 Config 文件部分解读&quot;">​</a></h3><h4 id="environment" tabindex="-1">Environment <a class="header-anchor" href="#environment" aria-label="Permalink to &quot;Environment&quot;">​</a></h4><p>数据源，可以配置多个数据源</p><blockquote><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">environments</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">default</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">environment</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;development&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">transactionManager</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;JDBC&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">dataSource</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;POOLED&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;driver&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;url&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;jdbc:mysql://localhost:3306/gp?useUnicode=true</span><span style="color:#79B8FF;">&amp;amp;</span><span style="color:#9ECBFF;">characterEncoding=utf-8</span><span style="color:#79B8FF;">&amp;amp;</span><span style="color:#9ECBFF;">useSSL=false</span><span style="color:#79B8FF;">&amp;amp;</span><span style="color:#9ECBFF;">useJDBCCompliantTimezoneShift=true</span><span style="color:#79B8FF;">&amp;amp;</span><span style="color:#9ECBFF;">useLegacyDatetimeCode=false</span><span style="color:#79B8FF;">&amp;amp;</span><span style="color:#9ECBFF;">serverTimezone=UTC&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;username&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;root&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">property</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;password&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;123456&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">dataSource</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">environment</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">environments</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">environments</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">default</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;development&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">environment</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;development&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">transactionManager</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;JDBC&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">dataSource</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;POOLED&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;driver&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;url&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;jdbc:mysql://localhost:3306/gp?useUnicode=true</span><span style="color:#005CC5;">&amp;amp;</span><span style="color:#032F62;">characterEncoding=utf-8</span><span style="color:#005CC5;">&amp;amp;</span><span style="color:#032F62;">useSSL=false</span><span style="color:#005CC5;">&amp;amp;</span><span style="color:#032F62;">useJDBCCompliantTimezoneShift=true</span><span style="color:#005CC5;">&amp;amp;</span><span style="color:#032F62;">useLegacyDatetimeCode=false</span><span style="color:#005CC5;">&amp;amp;</span><span style="color:#032F62;">serverTimezone=UTC&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;username&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;root&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;password&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;123456&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">dataSource</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">environment</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">environments</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></blockquote><h4 id="typehandler" tabindex="-1">TypeHandler <a class="header-anchor" href="#typehandler" aria-label="Permalink to &quot;TypeHandler&quot;">​</a></h4><p>转换了，不需要做 数据库 和 JAVA 的处理</p><blockquote><p>我们可以自定义 TypeHandler 转化：</p><p>枚举类型：Color</p><table><thead><tr><th>JAVA 英文</th><th>数据库</th><th>JAVA 中文</th></tr></thead><tbody><tr><td>red</td><td>1</td><td>红色</td></tr><tr><td>green</td><td>2</td><td>绿色</td></tr></tbody></table><p><code> sqlSessionFactoryBean.setTypeHandlers(new TypeHandler[]{new TestTypeHandle()});</code></p><p>基于某一个 SQL 来做的，不会影响你全局的东西。<strong>（BUG 比较难找）</strong></p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">typeHandlers</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">typeHandler</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">handler</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;xxxx&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">typeHandler</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">typeHandlers</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">typeHandlers</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">typeHandler</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">handler</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;xxxx&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">typeHandler</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">typeHandlers</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>然后在某一个 SQL 上去配置对应的 typeHandler</p></blockquote><h4 id="plugins" tabindex="-1">Plugins <a class="header-anchor" href="#plugins" aria-label="Permalink to &quot;Plugins&quot;">​</a></h4><p>拦截器。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Intercepts</span><span style="color:#E1E4E8;">({@</span><span style="color:#F97583;">Signature</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Executor.class,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">method</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;query&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">args</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {MappedStatement.class, Object.class, RowBounds.class, ResultHandler.class})})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Intercepts</span><span style="color:#24292E;">({@</span><span style="color:#D73A49;">Signature</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Executor.class,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">method</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;query&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">args</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {MappedStatement.class, Object.class, RowBounds.class, ResultHandler.class})})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h1 id="课后作业" tabindex="-1">课后作业： <a class="header-anchor" href="#课后作业" aria-label="Permalink to &quot;课后作业：&quot;">​</a></h1><ol><li><p>Mapper 在 Spring 管理下其实是单例，为什么可以是一个单例？</p><blockquote><p>Keep it simple, keep Mappers in the method scope. The following example demonstrates this practice.</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">SqlSession session </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sqlSessionFactory.</span><span style="color:#B392F0;">openSession</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    BlogMapper mapper </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> session.</span><span style="color:#B392F0;">getMapper</span><span style="color:#E1E4E8;">(BlogMapper.class);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// do work</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">finally</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      session.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">SqlSession session </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sqlSessionFactory.</span><span style="color:#6F42C1;">openSession</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    BlogMapper mapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> session.</span><span style="color:#6F42C1;">getMapper</span><span style="color:#24292E;">(BlogMapper.class);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// do work</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">finally</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      session.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>官网上是这样写的。</p></blockquote><p>SCOPE --&gt; application</p></li><li><p>MyBatis 在 Spring 集成下没有 mapper 的 xml 文件会不会报错，为什么？</p></li><li><p>TypeHandler 手写</p></li><li><p>手写多个 Plugin，多个 interceptor 到底谁先执行？ 顺序由谁去决定的？</p></li></ol>`,68),r=[t];function c(y,i,E,d,u,m){return a(),n("div",null,r)}const g=s(e,[["render",c]]);export{b as __pageData,g as default};
