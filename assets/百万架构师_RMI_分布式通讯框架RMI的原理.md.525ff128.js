import{_ as s,o as n,h as a,Q as l}from"./chunks/framework.da611722.js";const p="/assets/模块间远程调用的由来.712bc635.png",o="/assets/两个进程之间的远程调用的步骤.bda83fff.png",e="/assets/RMI_Service_Invoker.ea4c49cd.png",v=JSON.parse('{"title":"分布式通讯框架RMI的原理 | JavaGuide","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://javaguide.net/百万架构师/RMI/分布式通讯框架RMI的原理.html"}],["meta",{"name":"keywords","content":"分布式通讯框架RMI的原理 , JavaGuide , JavaGuide官网, Java面试指南, Java基础, 多线程, JVM, 虚拟机, 数据库, MySQL, Spring, Redis, MyBatis, 系统设计, 分布式, RPC, 高可用, 高并发"}],["meta",{"name":"og:url","content":"https://JavaGuide.net"}],["meta",{"name":"og:type","content":"website"}],["meta",{"name":"og:image","content":"https://javaguide.net/JavaGuide-og.png"}],["meta",{"name":"og:title","content":"分布式通讯框架RMI的原理 | JavaGuide | Java面试指南 | JavaGuide官网"}],["meta",{"name":"og:description","content":"分布式通讯框架RMI的原理 | JavaGuide | Java面试指南 | JavaGuide官网 | 「JavaGuide.net」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide.net ！"}],["meta",{"name":"twitter:site","content":"https://javaguide.net"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:creator","content":"nogeek.cn"}],["meta",{"name":"twitter:title","content":"分布式通讯框架RMI的原理 | JavaGuide | Java面试指南 | JavaGuide官网"}],["meta",{"name":"twitter:description","content":"分布式通讯框架RMI的原理 | JavaGuide | Java面试指南 | JavaGuide官网 | 「JavaGuide.net」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide.net ！"}],["meta",{"name":"twitter:image","content":"https://javaguide.net/JavaGuide-og.png"}],["meta",{"name":"sogou_site_verification","content":"fcAkazTXFd"}],["meta",{"name":"baidu-site-verification","content":"codeva-MXEPYsXKGk"}],["meta",{"name":"msvalidate.01","content":"9F2D57CFC59E8031212A166878638B15"}]]},"headers":[],"relativePath":"百万架构师/RMI/分布式通讯框架RMI的原理.md","filePath":"百万架构师/RMI/分布式通讯框架RMI的原理.md","lastUpdated":1741277271000}'),r={name:"百万架构师/RMI/分布式通讯框架RMI的原理.md"},t=l('<h2 id="分布式通讯框架rmi的原理" tabindex="-1">分布式通讯框架RMI的原理 <a class="header-anchor" href="#分布式通讯框架rmi的原理" aria-label="Permalink to &quot;分布式通讯框架RMI的原理&quot;">​</a></h2><h2 id="toc" tabindex="-1">TOC <a class="header-anchor" href="#toc" aria-label="Permalink to &quot;TOC&quot;">​</a></h2><p>[TOC]</p><ol><li>什么是RPC</li><li>RPC框架原理</li><li>了解Java RMI</li><li>基于RMI时间</li><li>RMI通讯原理分析</li><li>实现自己的RPC框架</li></ol><h2 id="什么是rpc" tabindex="-1">什么是RPC <a class="header-anchor" href="#什么是rpc" aria-label="Permalink to &quot;什么是RPC&quot;">​</a></h2><p>Remote procedure call</p><p>远程过程调用</p><p><img src="'+p+'" alt="模块间远程调用的由来.png"></p><p>集中式到分布式</p><ul><li><code>RMI(JRMP)</code> /<code>soap(webservice/axis/cxf)</code> <code>thrift</code>/<code>grpc</code>/<code>dubbo</code></li></ul><p>RPC框架的不断演进，基于TCP/IP协议之上封装了特定的协议通讯就是RMI</p><h2 id="rmi" tabindex="-1">RMI <a class="header-anchor" href="#rmi" aria-label="Permalink to &quot;RMI&quot;">​</a></h2><ul><li>Remote method invocation</li><li>远程方法调用</li><li>纯java的RPC框架</li><li>JRMP(支持java平台的远程调用)</li></ul><p>解决掉序列化、网络通讯、安全检查，把问题全部屏蔽掉。</p><h3 id="底层-tcp-ip协议层之上。" tabindex="-1">底层 TCP/IP协议层之上。 <a class="header-anchor" href="#底层-tcp-ip协议层之上。" aria-label="Permalink to &quot;底层 TCP/IP协议层之上。&quot;">​</a></h3><p><img src="'+o+`" alt="两个进程之间的远程调用的步骤.png"></p><hr><h4 id="序列化" tabindex="-1">序列化 <a class="header-anchor" href="#序列化" aria-label="Permalink to &quot;序列化&quot;">​</a></h4><h4 id="安全性" tabindex="-1">安全性 <a class="header-anchor" href="#安全性" aria-label="Permalink to &quot;安全性&quot;">​</a></h4><h4 id="服务的管理" tabindex="-1">服务的管理 <a class="header-anchor" href="#服务的管理" aria-label="Permalink to &quot;服务的管理&quot;">​</a></h4><h4 id="tcp-ip" tabindex="-1">TCP/IP <a class="header-anchor" href="#tcp-ip" aria-label="Permalink to &quot;TCP/IP&quot;">​</a></h4><hr><ul><li>实现java RMI <ul><li>继承 remote</li></ul></li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   IhelloService helloservice </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HelloServiceImpl</span><span style="color:#E1E4E8;">();   </span><span style="color:#6A737D;">//已经发布了一个远程对象。</span></span>
<span class="line"><span style="color:#E1E4E8;">   locateRegistry.</span><span style="color:#B392F0;">createRegistry</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1099</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">// 服务端的启动registry的过程</span></span>
<span class="line"><span style="color:#E1E4E8;">   Return registryImpl;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">Naming.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(“rmi</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//127.0.0.1/Hello0”,helloService); 注册中心，key-value形式。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   IhelloService helloservice </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HelloServiceImpl</span><span style="color:#24292E;">();   </span><span style="color:#6A737D;">//已经发布了一个远程对象。</span></span>
<span class="line"><span style="color:#24292E;">   locateRegistry.</span><span style="color:#6F42C1;">createRegistry</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1099</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">// 服务端的启动registry的过程</span></span>
<span class="line"><span style="color:#24292E;">   Return registryImpl;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Naming.</span><span style="color:#6F42C1;">bind</span><span style="color:#24292E;">(“rmi</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//127.0.0.1/Hello0”,helloService); 注册中心，key-value形式。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h5 id="注册中心是独立的。" tabindex="-1">注册中心是独立的。 <a class="header-anchor" href="#注册中心是独立的。" aria-label="Permalink to &quot;注册中心是独立的。&quot;">​</a></h5><h2 id="源码分析" tabindex="-1">源码分析 <a class="header-anchor" href="#源码分析" aria-label="Permalink to &quot;源码分析&quot;">​</a></h2><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Remote </span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(Remote var1, Object var2, </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> var3) throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Class var4 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> var1.</span><span style="color:#B392F0;">getClass</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    Remote var5;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 对HeloServiceImpl的代理</span></span>
<span class="line"><span style="color:#E1E4E8;">        var5 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Util.</span><span style="color:#B392F0;">createProxy</span><span style="color:#E1E4E8;">(var4, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getClientRef</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.forceStubUse);</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (IllegalArgumentException </span><span style="color:#FFAB70;">var7</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ExportException</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;remote object implements illegal remote interface&quot;</span><span style="color:#E1E4E8;">, var7);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (var5 </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> RemoteStub) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setSkeleton</span><span style="color:#E1E4E8;">(var1);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//  包装一个暴露在TCP端口上的对象</span></span>
<span class="line"><span style="color:#E1E4E8;">    Target var6 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Target</span><span style="color:#E1E4E8;">(var1, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, var5, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.ref.</span><span style="color:#B392F0;">getObjID</span><span style="color:#E1E4E8;">(), var3);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.ref.</span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(var6);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.hashToMethod_Map </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (Map)hashToMethod_Maps.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(var4);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> var5;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">getClientHost</span><span style="color:#E1E4E8;">() throws ServerNotActiveException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> TCPTransport.</span><span style="color:#B392F0;">getClientHost</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setSkeleton</span><span style="color:#E1E4E8;">(Remote var1) throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">withoutSkeletons.</span><span style="color:#B392F0;">containsKey</span><span style="color:#E1E4E8;">(var1.</span><span style="color:#B392F0;">getClass</span><span style="color:#E1E4E8;">())) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.skel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Util.</span><span style="color:#B392F0;">createSkeleton</span><span style="color:#E1E4E8;">(var1);</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (SkeletonNotFoundException </span><span style="color:#FFAB70;">var3</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            withoutSkeletons.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(var1.</span><span style="color:#B392F0;">getClass</span><span style="color:#E1E4E8;">(), (Object)</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Remote </span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(Remote var1, Object var2, </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> var3) throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">    Class var4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> var1.</span><span style="color:#6F42C1;">getClass</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    Remote var5;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 对HeloServiceImpl的代理</span></span>
<span class="line"><span style="color:#24292E;">        var5 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Util.</span><span style="color:#6F42C1;">createProxy</span><span style="color:#24292E;">(var4, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getClientRef</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.forceStubUse);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IllegalArgumentException </span><span style="color:#E36209;">var7</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ExportException</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;remote object implements illegal remote interface&quot;</span><span style="color:#24292E;">, var7);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (var5 </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> RemoteStub) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setSkeleton</span><span style="color:#24292E;">(var1);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//  包装一个暴露在TCP端口上的对象</span></span>
<span class="line"><span style="color:#24292E;">    Target var6 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Target</span><span style="color:#24292E;">(var1, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, var5, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.ref.</span><span style="color:#6F42C1;">getObjID</span><span style="color:#24292E;">(), var3);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.ref.</span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(var6);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.hashToMethod_Map </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (Map)hashToMethod_Maps.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(var4);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> var5;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getClientHost</span><span style="color:#24292E;">() throws ServerNotActiveException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> TCPTransport.</span><span style="color:#6F42C1;">getClientHost</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setSkeleton</span><span style="color:#24292E;">(Remote var1) throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">withoutSkeletons.</span><span style="color:#6F42C1;">containsKey</span><span style="color:#24292E;">(var1.</span><span style="color:#6F42C1;">getClass</span><span style="color:#24292E;">())) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.skel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Util.</span><span style="color:#6F42C1;">createSkeleton</span><span style="color:#24292E;">(var1);</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (SkeletonNotFoundException </span><span style="color:#E36209;">var3</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            withoutSkeletons.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(var1.</span><span style="color:#6F42C1;">getClass</span><span style="color:#24292E;">(), (Object)</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h2 id="服务端的启动registry的过程" tabindex="-1">服务端的启动Registry的过程 <a class="header-anchor" href="#服务端的启动registry的过程" aria-label="Permalink to &quot;服务端的启动Registry的过程&quot;">​</a></h2><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">LocateRegistry.</span><span style="color:#B392F0;">createRegistry</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1099</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">LocateRegistry.</span><span style="color:#6F42C1;">createRegistry</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1099</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="helloserviceimpl-stub" tabindex="-1">HelloServiceImpl_stub <a class="header-anchor" href="#helloserviceimpl-stub" aria-label="Permalink to &quot;HelloServiceImpl_stub&quot;">​</a></h3><h3 id="registryimpl-stub" tabindex="-1">RegistryImpl_stub <a class="header-anchor" href="#registryimpl-stub" aria-label="Permalink to &quot;RegistryImpl_stub&quot;">​</a></h3><h4 id="发布helloserviceimpl-代理对象" tabindex="-1">发布<code>HelloServiceImpl</code> 代理对象 <a class="header-anchor" href="#发布helloserviceimpl-代理对象" aria-label="Permalink to &quot;发布\`HelloServiceImpl\` 代理对象&quot;">​</a></h4><h4 id="构造方法" tabindex="-1">构造方法 <a class="header-anchor" href="#构造方法" aria-label="Permalink to &quot;构造方法&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 远端调用异常的话，会抛出一个异常</span></span>
<span class="line"><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HelloServiceImpl</span><span style="color:#E1E4E8;">() throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">sayHello</span><span style="color:#E1E4E8;">(String msg) throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Hello&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> msg;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 远端调用异常的话，会抛出一个异常</span></span>
<span class="line"><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HelloServiceImpl</span><span style="color:#24292E;">() throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">sayHello</span><span style="color:#24292E;">(String msg) throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Hello&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> msg;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="super调用父类unicastremoteobject" tabindex="-1">Super调用父类UnicastRemoteObject <a class="header-anchor" href="#super调用父类unicastremoteobject" aria-label="Permalink to &quot;Super调用父类UnicastRemoteObject&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UnicastRemoteObject</span><span style="color:#E1E4E8;">() throws RemoteException{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UnicastRemoteObject</span><span style="color:#24292E;">() throws RemoteException{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="this-0-调用-发布" tabindex="-1">This(0)调用 发布 <a class="header-anchor" href="#this-0-调用-发布" aria-label="Permalink to &quot;This(0)调用 发布&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UnicastRemoteObject</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> port) throws RemoteException{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.port </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> port;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">((Remote) </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, port);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UnicastRemoteObject</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> port) throws RemoteException{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.port </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> port;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">((Remote) </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, port);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="exportobject-remote-调用-发布" tabindex="-1"><code>#ExportObject(remote)</code> 调用 发布 <a class="header-anchor" href="#exportobject-remote-调用-发布" aria-label="Permalink to &quot;\`#ExportObject(remote)\` 调用  发布&quot;">​</a></h4><p>封装了一个<code>UnicastServerRef</code> 发布</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Remote </span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(Remote obj, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> port) throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(obj, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UnicastServerRef</span><span style="color:#E1E4E8;">(port));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Remote </span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(Remote obj, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> port) throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(obj, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UnicastServerRef</span><span style="color:#24292E;">(port));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="调用自身" tabindex="-1">调用自身 <a class="header-anchor" href="#调用自身" aria-label="Permalink to &quot;调用自身&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Remote </span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(Remote obj, UnicastServerRef sref) throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">// if obj extends UnicastRemoteObject, set its ref.</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> UnicastRemoteObject) {</span></span>
<span class="line"><span style="color:#E1E4E8;">       ((UnicastRemoteObject) obj).ref </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sref;</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> sref.</span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(obj, </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Remote </span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(Remote obj, UnicastServerRef sref) throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">// if obj extends UnicastRemoteObject, set its ref.</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> UnicastRemoteObject) {</span></span>
<span class="line"><span style="color:#24292E;">       ((UnicastRemoteObject) obj).ref </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sref;</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> sref.</span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(obj, </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="unicastserrerf-发布" tabindex="-1"><code>#UnicastSerRerf()</code> 发布 <a class="header-anchor" href="#unicastserrerf-发布" aria-label="Permalink to &quot;\`#UnicastSerRerf()\`  发布&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Remote </span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(Remote var1, Object var2, </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> var3) throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Class var4 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> var1.</span><span style="color:#B392F0;">getClass</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    Remote var5;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 创建代理，HelloServerImpl_stu(提供给客户端)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// JDK老版本需要手动实现 stu  新版本不需要了</span></span>
<span class="line"><span style="color:#E1E4E8;">        var5 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Util.</span><span style="color:#B392F0;">createProxy</span><span style="color:#E1E4E8;">(var4, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getClientRef</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.forceStubUse);</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (IllegalArgumentException </span><span style="color:#FFAB70;">var7</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ExportException</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;remote object implements illegal remote interface&quot;</span><span style="color:#E1E4E8;">, var7);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (var5 </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> RemoteStub) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setSkeleton</span><span style="color:#E1E4E8;">(var1);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    Target var6 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Target</span><span style="color:#E1E4E8;">(var1, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, var5, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.ref.</span><span style="color:#B392F0;">getObjID</span><span style="color:#E1E4E8;">(), var3);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.ref.</span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(var6);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//发布TCP协议的服务</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.hashToMethod_Map </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (Map)hashToMethod_Maps.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(var4);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> var5;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Remote </span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(Remote var1, Object var2, </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> var3) throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">    Class var4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> var1.</span><span style="color:#6F42C1;">getClass</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    Remote var5;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 创建代理，HelloServerImpl_stu(提供给客户端)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// JDK老版本需要手动实现 stu  新版本不需要了</span></span>
<span class="line"><span style="color:#24292E;">        var5 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Util.</span><span style="color:#6F42C1;">createProxy</span><span style="color:#24292E;">(var4, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getClientRef</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.forceStubUse);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IllegalArgumentException </span><span style="color:#E36209;">var7</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ExportException</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;remote object implements illegal remote interface&quot;</span><span style="color:#24292E;">, var7);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (var5 </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> RemoteStub) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setSkeleton</span><span style="color:#24292E;">(var1);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    Target var6 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Target</span><span style="color:#24292E;">(var1, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, var5, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.ref.</span><span style="color:#6F42C1;">getObjID</span><span style="color:#24292E;">(), var3);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.ref.</span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(var6);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//发布TCP协议的服务</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.hashToMethod_Map </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (Map)hashToMethod_Maps.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(var4);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> var5;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h4 id="发布-registryimpl-对象" tabindex="-1">发布 <code>registryImpl</code> 对象 <a class="header-anchor" href="#发布-registryimpl-对象" aria-label="Permalink to &quot;发布 \`registryImpl\` 对象&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">LocateRegistry.</span><span style="color:#B392F0;">createRegistry</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1099</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">LocateRegistry.</span><span style="color:#6F42C1;">createRegistry</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1099</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="过程如上" tabindex="-1">过程如上 <a class="header-anchor" href="#过程如上" aria-label="Permalink to &quot;过程如上&quot;">​</a></h4><ul><li><p><code>RegistryImpl_stub</code> 不需要再生成了，已经提供了</p></li><li><p><code>HelloServiceImpl_stub</code> 需要动态生成字节码，动态的生成一个文件。</p></li></ul><h4 id="暴露" tabindex="-1">暴露 <a class="header-anchor" href="#暴露" aria-label="Permalink to &quot;暴露&quot;">​</a></h4><h5 id="server" tabindex="-1">Server <a class="header-anchor" href="#server" aria-label="Permalink to &quot;Server&quot;">​</a></h5><div class="language-jade vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jade</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">LocateRegistry</span><span style="color:#B392F0;">.createRegistry</span><span style="color:#79B8FF;">(</span><span style="color:#B392F0;">1099</span><span style="color:#79B8FF;">)</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">LocateRegistry</span><span style="color:#6F42C1;">.createRegistry</span><span style="color:#005CC5;">(</span><span style="color:#6F42C1;">1099</span><span style="color:#005CC5;">)</span><span style="color:#24292E;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="locateregistry" tabindex="-1">LocateRegistry <a class="header-anchor" href="#locateregistry" aria-label="Permalink to &quot;LocateRegistry&quot;">​</a></h5><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Registry </span><span style="color:#B392F0;">createRegistry</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> port) throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RegistryImpl</span><span style="color:#E1E4E8;">(port);</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Registry </span><span style="color:#6F42C1;">createRegistry</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> port) throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RegistryImpl</span><span style="color:#24292E;">(port);</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="registryimpl" tabindex="-1">registryImpl <a class="header-anchor" href="#registryimpl" aria-label="Permalink to &quot;registryImpl&quot;">​</a></h5><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RegistryImpl</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> var1) throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (var1 </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1099</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> System.</span><span style="color:#B392F0;">getSecurityManager</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            AccessController.</span><span style="color:#B392F0;">doPrivileged</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> PrivilegedExceptionAction&lt;</span><span style="color:#F97583;">Void</span><span style="color:#E1E4E8;">&gt;() {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Void </span><span style="color:#B392F0;">run</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">throws</span><span style="color:#E1E4E8;"> RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    LiveRef var1x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LiveRef</span><span style="color:#E1E4E8;">(RegistryImpl.id, var1);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    RegistryImpl.this.</span><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UnicastServerRef</span><span style="color:#E1E4E8;">(var1x, (var0) </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> RegistryImpl.</span><span style="color:#B392F0;">registryFilter</span><span style="color:#E1E4E8;">(var0);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    }));</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }, (AccessControlContext)</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SocketPermission</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;localhost:&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> var1, </span><span style="color:#9ECBFF;">&quot;listen,accept&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (PrivilegedActionException </span><span style="color:#FFAB70;">var3</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> (RemoteException)var3.</span><span style="color:#B392F0;">getException</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        LiveRef var2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LiveRef</span><span style="color:#E1E4E8;">(id, var1);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UnicastServerRef</span><span style="color:#E1E4E8;">(var2, RegistryImpl</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">registryFilter));</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RegistryImpl</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> var1) throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (var1 </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1099</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">getSecurityManager</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            AccessController.</span><span style="color:#6F42C1;">doPrivileged</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> PrivilegedExceptionAction&lt;</span><span style="color:#D73A49;">Void</span><span style="color:#24292E;">&gt;() {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Void </span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">                    LiveRef var1x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LiveRef</span><span style="color:#24292E;">(RegistryImpl.id, var1);</span></span>
<span class="line"><span style="color:#24292E;">                    RegistryImpl.this.</span><span style="color:#6F42C1;">setup</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UnicastServerRef</span><span style="color:#24292E;">(var1x, (var0) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> RegistryImpl.</span><span style="color:#6F42C1;">registryFilter</span><span style="color:#24292E;">(var0);</span></span>
<span class="line"><span style="color:#24292E;">                    }));</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }, (AccessControlContext)</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SocketPermission</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;localhost:&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> var1, </span><span style="color:#032F62;">&quot;listen,accept&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (PrivilegedActionException </span><span style="color:#E36209;">var3</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> (RemoteException)var3.</span><span style="color:#6F42C1;">getException</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        LiveRef var2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LiveRef</span><span style="color:#24292E;">(id, var1);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setup</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UnicastServerRef</span><span style="color:#24292E;">(var2, RegistryImpl</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">registryFilter));</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h5 id="registryimpl-1" tabindex="-1">RegistryImpl <a class="header-anchor" href="#registryimpl-1" aria-label="Permalink to &quot;RegistryImpl&quot;">​</a></h5><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;">(UnicastServerRef var1) throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.ref </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> var1;</span></span>
<span class="line"><span style="color:#E1E4E8;">     var1.</span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, (Object)</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setup</span><span style="color:#24292E;">(UnicastServerRef var1) throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.ref </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> var1;</span></span>
<span class="line"><span style="color:#24292E;">     var1.</span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, (Object)</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h5 id="unicastserverref" tabindex="-1">UnicastServerRef <a class="header-anchor" href="#unicastserverref" aria-label="Permalink to &quot;UnicastServerRef&quot;">​</a></h5><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Remote </span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(Remote var1, Object var2, </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> var3) throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Class var4 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> var1.</span><span style="color:#B392F0;">getClass</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    Remote var5;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        var5 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Util.</span><span style="color:#B392F0;">createProxy</span><span style="color:#E1E4E8;">(var4, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getClientRef</span><span style="color:#E1E4E8;">(), </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.forceStubUse);</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (IllegalArgumentException </span><span style="color:#FFAB70;">var7</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ExportException</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;remote object implements illegal remote interface&quot;</span><span style="color:#E1E4E8;">, var7);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (var5 </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> RemoteStub) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">setSkeleton</span><span style="color:#E1E4E8;">(var1);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    Target var6 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Target</span><span style="color:#E1E4E8;">(var1, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, var5, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.ref.</span><span style="color:#B392F0;">getObjID</span><span style="color:#E1E4E8;">(), var3);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.ref.</span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(var6);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.hashToMethod_Map </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (Map)hashToMethod_Maps.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(var4);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> var5;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Remote </span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(Remote var1, Object var2, </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> var3) throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">    Class var4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> var1.</span><span style="color:#6F42C1;">getClass</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    Remote var5;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        var5 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Util.</span><span style="color:#6F42C1;">createProxy</span><span style="color:#24292E;">(var4, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getClientRef</span><span style="color:#24292E;">(), </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.forceStubUse);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IllegalArgumentException </span><span style="color:#E36209;">var7</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ExportException</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;remote object implements illegal remote interface&quot;</span><span style="color:#24292E;">, var7);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (var5 </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> RemoteStub) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setSkeleton</span><span style="color:#24292E;">(var1);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    Target var6 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Target</span><span style="color:#24292E;">(var1, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, var5, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.ref.</span><span style="color:#6F42C1;">getObjID</span><span style="color:#24292E;">(), var3);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.ref.</span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(var6);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.hashToMethod_Map </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (Map)hashToMethod_Maps.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(var4);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> var5;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h5 id="liveref" tabindex="-1">LiveRef <a class="header-anchor" href="#liveref" aria-label="Permalink to &quot;LiveRef&quot;">​</a></h5><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(Target var1) throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.ep.</span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(var1);</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(Target var1) throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.ep.</span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(var1);</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="endpoint" tabindex="-1">Endpoint <a class="header-anchor" href="#endpoint" aria-label="Permalink to &quot;Endpoint&quot;">​</a></h5><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(Target var1) throws RemoteException;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(Target var1) throws RemoteException;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h5 id="tcpendpoint" tabindex="-1">TCPEndpoint <a class="header-anchor" href="#tcpendpoint" aria-label="Permalink to &quot;TCPEndpoint&quot;">​</a></h5><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(Target var1) throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.transport.</span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(var1);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(Target var1) throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.transport.</span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(var1);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h5 id="tcptransport-最终暴露服务" tabindex="-1">TCPTransport 最终暴露服务 <a class="header-anchor" href="#tcptransport-最终暴露服务" aria-label="Permalink to &quot;TCPTransport   最终暴露服务&quot;">​</a></h5><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(Target var1) throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">synchronized</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">++</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.exportCount;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> var2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> var12 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">         var12 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">exportObject</span><span style="color:#E1E4E8;">(var1);</span></span>
<span class="line"><span style="color:#E1E4E8;">         var2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         var12 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">     } </span><span style="color:#F97583;">finally</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (var12) {</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">var2) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                 </span><span style="color:#F97583;">synchronized</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                     </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">decrementExportCount</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                 }</span></span>
<span class="line"><span style="color:#E1E4E8;">             }</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">var2) {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">synchronized</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">decrementExportCount</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">     }</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(Target var1) throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">synchronized</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">++</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.exportCount;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> var2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> var12 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">         var12 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">exportObject</span><span style="color:#24292E;">(var1);</span></span>
<span class="line"><span style="color:#24292E;">         var2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         var12 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">     } </span><span style="color:#D73A49;">finally</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (var12) {</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">var2) {</span></span>
<span class="line"><span style="color:#24292E;">                 </span><span style="color:#D73A49;">synchronized</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                     </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">decrementExportCount</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                 }</span></span>
<span class="line"><span style="color:#24292E;">             }</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">     }</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">var2) {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">synchronized</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">decrementExportCount</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">     }</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p><code>TCPTransport</code> 中的 new listen() 创建了一个<code>new server()</code></p><ul><li>工厂模式</li><li>模板模式</li></ul><h2 id="客户端获取服务端的代理" tabindex="-1">客户端获取服务端的代理 <a class="header-anchor" href="#客户端获取服务端的代理" aria-label="Permalink to &quot;客户端获取服务端的代理&quot;">​</a></h2><p>就是stub对象</p><p>获得 HelloServiceImpl_stub 、 RegisterImpl_stub</p><p>客户端获取的一定是个proxy</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">IHelloService helloService </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (IHelloService) Naming.</span><span style="color:#B392F0;">lookup</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;rmi://127.0.0.1/hello&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// HelloServiceImpl实例（HelloServiceImpl_stub）</span></span>
<span class="line"><span style="color:#6A737D;">// RegistryImpl_stub</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">IHelloService helloService </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (IHelloService) Naming.</span><span style="color:#6F42C1;">lookup</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;rmi://127.0.0.1/hello&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// HelloServiceImpl实例（HelloServiceImpl_stub）</span></span>
<span class="line"><span style="color:#6A737D;">// RegistryImpl_stub</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="naming" tabindex="-1">Naming <a class="header-anchor" href="#naming" aria-label="Permalink to &quot;Naming&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Remote </span><span style="color:#B392F0;">lookup</span><span style="color:#E1E4E8;">(String name) throws NotBoundException, </span></span>
<span class="line"><span style="color:#E1E4E8;">		java.net.MalformedURLException, RemoteException{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 解析URL</span></span>
<span class="line"><span style="color:#E1E4E8;">    ParsedNamingURL parsed </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseURL</span><span style="color:#E1E4E8;">(name);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 得到注册的实例不可能是RegistryImpl ，而应该是regisryImpl_stub</span></span>
<span class="line"><span style="color:#E1E4E8;">    Registry registry </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getRegistry</span><span style="color:#E1E4E8;">(parsed);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (parsed.name </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> registry;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> registry.</span><span style="color:#B392F0;">lookup</span><span style="color:#E1E4E8;">(parsed.name);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Remote </span><span style="color:#6F42C1;">lookup</span><span style="color:#24292E;">(String name) throws NotBoundException, </span></span>
<span class="line"><span style="color:#24292E;">		java.net.MalformedURLException, RemoteException{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 解析URL</span></span>
<span class="line"><span style="color:#24292E;">    ParsedNamingURL parsed </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseURL</span><span style="color:#24292E;">(name);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 得到注册的实例不可能是RegistryImpl ，而应该是regisryImpl_stub</span></span>
<span class="line"><span style="color:#24292E;">    Registry registry </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getRegistry</span><span style="color:#24292E;">(parsed);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (parsed.name </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> registry;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> registry.</span><span style="color:#6F42C1;">lookup</span><span style="color:#24292E;">(parsed.name);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="naming-1" tabindex="-1">Naming <a class="header-anchor" href="#naming-1" aria-label="Permalink to &quot;Naming&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Registry </span><span style="color:#B392F0;">getRegistry</span><span style="color:#E1E4E8;">(ParsedNamingURL parsed)  throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> LocateRegistry.</span><span style="color:#B392F0;">getRegistry</span><span style="color:#E1E4E8;">(parsed.host, parsed.port);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Registry </span><span style="color:#6F42C1;">getRegistry</span><span style="color:#24292E;">(ParsedNamingURL parsed)  throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> LocateRegistry.</span><span style="color:#6F42C1;">getRegistry</span><span style="color:#24292E;">(parsed.host, parsed.port);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="locateregistry-1" tabindex="-1">LocateRegistry <a class="header-anchor" href="#locateregistry-1" aria-label="Permalink to &quot;LocateRegistry&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Registry </span><span style="color:#B392F0;">getRegistry</span><span style="color:#E1E4E8;">(String host, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> port) throws RemoteException{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getRegistry</span><span style="color:#E1E4E8;">(host, port, </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Registry </span><span style="color:#6F42C1;">getRegistry</span><span style="color:#24292E;">(String host, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> port) throws RemoteException{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getRegistry</span><span style="color:#24292E;">(host, port, </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="locateregistry-2" tabindex="-1">LocateRegistry <a class="header-anchor" href="#locateregistry-2" aria-label="Permalink to &quot;LocateRegistry&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Registry </span><span style="color:#B392F0;">getRegistry</span><span style="color:#E1E4E8;">(String host, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> port,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                   RMIClientSocketFactory csf)</span></span>
<span class="line"><span style="color:#E1E4E8;">    throws RemoteException</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    Registry registry </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (port </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        port </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Registry.REGISTRY_PORT;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (host </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> host.</span><span style="color:#B392F0;">length</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            host </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> java.net.InetAddress.</span><span style="color:#B392F0;">getLocalHost</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getHostAddress</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (Exception </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// If that failed, at least try &quot;&quot; (localhost) anyway...</span></span>
<span class="line"><span style="color:#E1E4E8;">            host </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    LiveRef liveRef </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LiveRef</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ObjID</span><span style="color:#E1E4E8;">(ObjID.REGISTRY_ID),</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TCPEndpoint</span><span style="color:#E1E4E8;">(host, port, csf, </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    RemoteRef ref </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">        (csf </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UnicastRef</span><span style="color:#E1E4E8;">(liveRef) </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UnicastRef2</span><span style="color:#E1E4E8;">(liveRef);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 创建代理  然后拿到一个代理类</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (Registry) Util.createProxy</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(RegistryImpl.class, ref, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Registry </span><span style="color:#6F42C1;">getRegistry</span><span style="color:#24292E;">(String host, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> port,</span></span>
<span class="line"><span style="color:#24292E;">                                   RMIClientSocketFactory csf)</span></span>
<span class="line"><span style="color:#24292E;">    throws RemoteException</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    Registry registry </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (port </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        port </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Registry.REGISTRY_PORT;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (host </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> host.</span><span style="color:#6F42C1;">length</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            host </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> java.net.InetAddress.</span><span style="color:#6F42C1;">getLocalHost</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getHostAddress</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// If that failed, at least try &quot;&quot; (localhost) anyway...</span></span>
<span class="line"><span style="color:#24292E;">            host </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    LiveRef liveRef </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LiveRef</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ObjID</span><span style="color:#24292E;">(ObjID.REGISTRY_ID),</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TCPEndpoint</span><span style="color:#24292E;">(host, port, csf, </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    RemoteRef ref </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">        (csf </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UnicastRef</span><span style="color:#24292E;">(liveRef) </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UnicastRef2</span><span style="color:#24292E;">(liveRef);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 创建代理  然后拿到一个代理类</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (Registry) Util.createProxy</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(RegistryImpl.class, ref, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h4 id="utils-创建代理的时候" tabindex="-1">Utils 创建代理的时候 <a class="header-anchor" href="#utils-创建代理的时候" aria-label="Permalink to &quot;Utils  创建代理的时候&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Remote </span><span style="color:#B392F0;">createProxy</span><span style="color:#E1E4E8;">(Class</span><span style="color:#F97583;">&lt;?&gt;</span><span style="color:#E1E4E8;"> var0, RemoteRef var1, </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> var2) throws StubNotFoundException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Class var3;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        var3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getRemoteClass</span><span style="color:#E1E4E8;">(var0);</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (ClassNotFoundException </span><span style="color:#FFAB70;">var9</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StubNotFoundException</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;object does not implement a remote interface: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> var0.</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 上边已经创建完了</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (var2 </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">ignoreStubClasses </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">stubClassExists</span><span style="color:#E1E4E8;">(var3)) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 创建一个createStub</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createStub</span><span style="color:#E1E4E8;">(var3, var1);</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> ClassLoader var4 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> var0.</span><span style="color:#B392F0;">getClassLoader</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Class</span><span style="color:#E1E4E8;">[] var5 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getRemoteInterfaces</span><span style="color:#E1E4E8;">(var0);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> RemoteObjectInvocationHandler var6 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RemoteObjectInvocationHandler</span><span style="color:#E1E4E8;">(var1);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (Remote)AccessController.</span><span style="color:#B392F0;">doPrivileged</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> PrivilegedAction&lt;</span><span style="color:#F97583;">Remote</span><span style="color:#E1E4E8;">&gt;() {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Remote </span><span style="color:#B392F0;">run</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (Remote)Proxy.</span><span style="color:#B392F0;">newProxyInstance</span><span style="color:#E1E4E8;">(var4, var5, var6);</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            });</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (IllegalArgumentException </span><span style="color:#FFAB70;">var8</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StubNotFoundException</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;unable to create proxy&quot;</span><span style="color:#E1E4E8;">, var8);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Remote </span><span style="color:#6F42C1;">createProxy</span><span style="color:#24292E;">(Class</span><span style="color:#D73A49;">&lt;?&gt;</span><span style="color:#24292E;"> var0, RemoteRef var1, </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> var2) throws StubNotFoundException {</span></span>
<span class="line"><span style="color:#24292E;">    Class var3;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        var3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getRemoteClass</span><span style="color:#24292E;">(var0);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (ClassNotFoundException </span><span style="color:#E36209;">var9</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StubNotFoundException</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;object does not implement a remote interface: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> var0.</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 上边已经创建完了</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (var2 </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">ignoreStubClasses </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">stubClassExists</span><span style="color:#24292E;">(var3)) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 创建一个createStub</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createStub</span><span style="color:#24292E;">(var3, var1);</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> ClassLoader var4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> var0.</span><span style="color:#6F42C1;">getClassLoader</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Class</span><span style="color:#24292E;">[] var5 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getRemoteInterfaces</span><span style="color:#24292E;">(var0);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> RemoteObjectInvocationHandler var6 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RemoteObjectInvocationHandler</span><span style="color:#24292E;">(var1);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (Remote)AccessController.</span><span style="color:#6F42C1;">doPrivileged</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> PrivilegedAction&lt;</span><span style="color:#D73A49;">Remote</span><span style="color:#24292E;">&gt;() {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Remote </span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (Remote)Proxy.</span><span style="color:#6F42C1;">newProxyInstance</span><span style="color:#24292E;">(var4, var5, var6);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            });</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IllegalArgumentException </span><span style="color:#E36209;">var8</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StubNotFoundException</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;unable to create proxy&quot;</span><span style="color:#24292E;">, var8);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h4 id="unicastref" tabindex="-1">UnicastRef <a class="header-anchor" href="#unicastref" aria-label="Permalink to &quot;UnicastRef&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> RemoteCall </span><span style="color:#B392F0;">newCall</span><span style="color:#E1E4E8;">(RemoteObject var1, </span><span style="color:#F97583;">Operation</span><span style="color:#E1E4E8;">[] var2, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> var3, </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> var4) throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    clientRefLog.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(Log.BRIEF, </span><span style="color:#9ECBFF;">&quot;get connection&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    Connection var6 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.ref.</span><span style="color:#B392F0;">getChannel</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">newConnection</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        clientRefLog.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(Log.VERBOSE, </span><span style="color:#9ECBFF;">&quot;create call context&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (clientCallLog.</span><span style="color:#B392F0;">isLoggable</span><span style="color:#E1E4E8;">(Log.VERBOSE)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">logClientCall</span><span style="color:#E1E4E8;">(var1, var2[var3]);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        StreamRemoteCall var7 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">StreamRemoteCall</span><span style="color:#E1E4E8;">(var6, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.ref.</span><span style="color:#B392F0;">getObjID</span><span style="color:#E1E4E8;">(), var3, var4);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">marshalCustomCallData</span><span style="color:#E1E4E8;">(var7.</span><span style="color:#B392F0;">getOutputStream</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (IOException </span><span style="color:#FFAB70;">var9</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MarshalException</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;error marshaling custom call data&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> var7;</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (RemoteException </span><span style="color:#FFAB70;">var10</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.ref.</span><span style="color:#B392F0;">getChannel</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">free</span><span style="color:#E1E4E8;">(var6, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> var10;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> RemoteCall </span><span style="color:#6F42C1;">newCall</span><span style="color:#24292E;">(RemoteObject var1, </span><span style="color:#D73A49;">Operation</span><span style="color:#24292E;">[] var2, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> var3, </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> var4) throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">    clientRefLog.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Log.BRIEF, </span><span style="color:#032F62;">&quot;get connection&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    Connection var6 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.ref.</span><span style="color:#6F42C1;">getChannel</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">newConnection</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        clientRefLog.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Log.VERBOSE, </span><span style="color:#032F62;">&quot;create call context&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (clientCallLog.</span><span style="color:#6F42C1;">isLoggable</span><span style="color:#24292E;">(Log.VERBOSE)) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">logClientCall</span><span style="color:#24292E;">(var1, var2[var3]);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        StreamRemoteCall var7 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">StreamRemoteCall</span><span style="color:#24292E;">(var6, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.ref.</span><span style="color:#6F42C1;">getObjID</span><span style="color:#24292E;">(), var3, var4);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">marshalCustomCallData</span><span style="color:#24292E;">(var7.</span><span style="color:#6F42C1;">getOutputStream</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IOException </span><span style="color:#E36209;">var9</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MarshalException</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;error marshaling custom call data&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> var7;</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (RemoteException </span><span style="color:#E36209;">var10</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.ref.</span><span style="color:#6F42C1;">getChannel</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">free</span><span style="color:#24292E;">(var6, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> var10;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="tcpchannel" tabindex="-1">TCPChannel <a class="header-anchor" href="#tcpchannel" aria-label="Permalink to &quot;TCPChannel&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Connection </span><span style="color:#B392F0;">newConnection</span><span style="color:#E1E4E8;">() throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    TCPConnection var1;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">do</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        var1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        List var2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.freeList;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">synchronized</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.freeList) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> var3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.freeList.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (var3 </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">checkConnectPermission</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                var1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (TCPConnection)</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.freeList.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(var3);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.freeList.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(var3);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (var1 </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">var1.</span><span style="color:#B392F0;">isDead</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                TCPTransport.tcpLog.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(Log.BRIEF, </span><span style="color:#9ECBFF;">&quot;reuse connection&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> var1;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">free</span><span style="color:#E1E4E8;">(var1, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(var1 </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">createConnection</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Connection </span><span style="color:#6F42C1;">newConnection</span><span style="color:#24292E;">() throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">    TCPConnection var1;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">do</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        var1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        List var2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.freeList;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">synchronized</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.freeList) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> var3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.freeList.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (var3 </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">checkConnectPermission</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                var1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (TCPConnection)</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.freeList.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(var3);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.freeList.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(var3);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (var1 </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">var1.</span><span style="color:#6F42C1;">isDead</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">                TCPTransport.tcpLog.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Log.BRIEF, </span><span style="color:#032F62;">&quot;reuse connection&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> var1;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">free</span><span style="color:#24292E;">(var1, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(var1 </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">createConnection</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h4 id="tcpchannel-1" tabindex="-1">TCPChannel <a class="header-anchor" href="#tcpchannel-1" aria-label="Permalink to &quot;TCPChannel&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Connection </span><span style="color:#B392F0;">createConnection</span><span style="color:#E1E4E8;">() throws RemoteException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    TCPTransport.tcpLog.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(Log.BRIEF, </span><span style="color:#9ECBFF;">&quot;create connection&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    TCPConnection var1;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usingMultiplexer) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        Socket var2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.ep.</span><span style="color:#B392F0;">newSocket</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        var1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TCPConnection</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, var2);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            DataOutputStream var3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DataOutputStream</span><span style="color:#E1E4E8;">(var1.</span><span style="color:#B392F0;">getOutputStream</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">writeTransportHeader</span><span style="color:#E1E4E8;">(var3);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">var1.</span><span style="color:#B392F0;">isReusable</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                var3.</span><span style="color:#B392F0;">writeByte</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">76</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                var3.</span><span style="color:#B392F0;">writeByte</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">75</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                var3.</span><span style="color:#B392F0;">flush</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> var4 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    var4 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> var2.</span><span style="color:#B392F0;">getSoTimeout</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                    var2.</span><span style="color:#B392F0;">setSoTimeout</span><span style="color:#E1E4E8;">(handshakeTimeout);</span></span>
<span class="line"><span style="color:#E1E4E8;">                } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (Exception </span><span style="color:#FFAB70;">var15</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    ;</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                DataInputStream var5 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">DataInputStream</span><span style="color:#E1E4E8;">(var1.</span><span style="color:#B392F0;">getInputStream</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;"> var6 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> var5.</span><span style="color:#B392F0;">readByte</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (var6 </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">78</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ConnectIOException</span><span style="color:#E1E4E8;">(var6 </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">79</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;JRMP StreamProtocol not supported by server&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;non-JRMP server at remote endpoint&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                String var7 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> var5.</span><span style="color:#B392F0;">readUTF</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> var8 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> var5.</span><span style="color:#B392F0;">readInt</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (TCPTransport.tcpLog.</span><span style="color:#B392F0;">isLoggable</span><span style="color:#E1E4E8;">(Log.VERBOSE)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    TCPTransport.tcpLog.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(Log.VERBOSE, </span><span style="color:#9ECBFF;">&quot;server suggested &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> var7 </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;:&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> var8);</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                TCPEndpoint.</span><span style="color:#B392F0;">setLocalHost</span><span style="color:#E1E4E8;">(var7);</span></span>
<span class="line"><span style="color:#E1E4E8;">                TCPEndpoint var9 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> TCPEndpoint.</span><span style="color:#B392F0;">getLocalEndpoint</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, (RMIClientSocketFactory)</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, (RMIServerSocketFactory)</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                var3.</span><span style="color:#B392F0;">writeUTF</span><span style="color:#E1E4E8;">(var9.</span><span style="color:#B392F0;">getHost</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                var3.</span><span style="color:#B392F0;">writeInt</span><span style="color:#E1E4E8;">(var9.</span><span style="color:#B392F0;">getPort</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (TCPTransport.tcpLog.</span><span style="color:#B392F0;">isLoggable</span><span style="color:#E1E4E8;">(Log.VERBOSE)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    TCPTransport.tcpLog.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(Log.VERBOSE, </span><span style="color:#9ECBFF;">&quot;using &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> var9.</span><span style="color:#B392F0;">getHost</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;:&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> var9.</span><span style="color:#B392F0;">getPort</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    var2.</span><span style="color:#B392F0;">setSoTimeout</span><span style="color:#E1E4E8;">(var4 </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> var4 </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> responseTimeout);</span></span>
<span class="line"><span style="color:#E1E4E8;">                } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (Exception </span><span style="color:#FFAB70;">var14</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    ;</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                var3.</span><span style="color:#B392F0;">flush</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (IOException </span><span style="color:#FFAB70;">var16</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (var16 </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> RemoteException) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> (RemoteException)var16;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ConnectIOException</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;error during JRMP connection establishment&quot;</span><span style="color:#E1E4E8;">, var16);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            var1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.multiplexer.</span><span style="color:#B392F0;">openConnection</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (IOException </span><span style="color:#FFAB70;">var13</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">synchronized</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.usingMultiplexer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.multiplexer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ConnectIOException</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;error opening virtual connection over multiplexed connection&quot;</span><span style="color:#E1E4E8;">, var13);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> var1;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Connection </span><span style="color:#6F42C1;">createConnection</span><span style="color:#24292E;">() throws RemoteException {</span></span>
<span class="line"><span style="color:#24292E;">    TCPTransport.tcpLog.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Log.BRIEF, </span><span style="color:#032F62;">&quot;create connection&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    TCPConnection var1;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.usingMultiplexer) {</span></span>
<span class="line"><span style="color:#24292E;">        Socket var2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.ep.</span><span style="color:#6F42C1;">newSocket</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        var1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TCPConnection</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, var2);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            DataOutputStream var3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DataOutputStream</span><span style="color:#24292E;">(var1.</span><span style="color:#6F42C1;">getOutputStream</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">writeTransportHeader</span><span style="color:#24292E;">(var3);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">var1.</span><span style="color:#6F42C1;">isReusable</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">                var3.</span><span style="color:#6F42C1;">writeByte</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">76</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                var3.</span><span style="color:#6F42C1;">writeByte</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">75</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                var3.</span><span style="color:#6F42C1;">flush</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> var4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    var4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> var2.</span><span style="color:#6F42C1;">getSoTimeout</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                    var2.</span><span style="color:#6F42C1;">setSoTimeout</span><span style="color:#24292E;">(handshakeTimeout);</span></span>
<span class="line"><span style="color:#24292E;">                } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">var15</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                    ;</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">                DataInputStream var5 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DataInputStream</span><span style="color:#24292E;">(var1.</span><span style="color:#6F42C1;">getInputStream</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;"> var6 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> var5.</span><span style="color:#6F42C1;">readByte</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (var6 </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">78</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ConnectIOException</span><span style="color:#24292E;">(var6 </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">79</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;JRMP StreamProtocol not supported by server&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;non-JRMP server at remote endpoint&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">                String var7 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> var5.</span><span style="color:#6F42C1;">readUTF</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> var8 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> var5.</span><span style="color:#6F42C1;">readInt</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (TCPTransport.tcpLog.</span><span style="color:#6F42C1;">isLoggable</span><span style="color:#24292E;">(Log.VERBOSE)) {</span></span>
<span class="line"><span style="color:#24292E;">                    TCPTransport.tcpLog.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Log.VERBOSE, </span><span style="color:#032F62;">&quot;server suggested &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> var7 </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;:&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> var8);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">                TCPEndpoint.</span><span style="color:#6F42C1;">setLocalHost</span><span style="color:#24292E;">(var7);</span></span>
<span class="line"><span style="color:#24292E;">                TCPEndpoint var9 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> TCPEndpoint.</span><span style="color:#6F42C1;">getLocalEndpoint</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, (RMIClientSocketFactory)</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, (RMIServerSocketFactory)</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                var3.</span><span style="color:#6F42C1;">writeUTF</span><span style="color:#24292E;">(var9.</span><span style="color:#6F42C1;">getHost</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                var3.</span><span style="color:#6F42C1;">writeInt</span><span style="color:#24292E;">(var9.</span><span style="color:#6F42C1;">getPort</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (TCPTransport.tcpLog.</span><span style="color:#6F42C1;">isLoggable</span><span style="color:#24292E;">(Log.VERBOSE)) {</span></span>
<span class="line"><span style="color:#24292E;">                    TCPTransport.tcpLog.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(Log.VERBOSE, </span><span style="color:#032F62;">&quot;using &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> var9.</span><span style="color:#6F42C1;">getHost</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;:&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> var9.</span><span style="color:#6F42C1;">getPort</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    var2.</span><span style="color:#6F42C1;">setSoTimeout</span><span style="color:#24292E;">(var4 </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> var4 </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> responseTimeout);</span></span>
<span class="line"><span style="color:#24292E;">                } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">var14</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                    ;</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">                var3.</span><span style="color:#6F42C1;">flush</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IOException </span><span style="color:#E36209;">var16</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (var16 </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> RemoteException) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> (RemoteException)var16;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ConnectIOException</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;error during JRMP connection establishment&quot;</span><span style="color:#24292E;">, var16);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            var1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.multiplexer.</span><span style="color:#6F42C1;">openConnection</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IOException </span><span style="color:#E36209;">var13</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">synchronized</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.usingMultiplexer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.multiplexer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ConnectIOException</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;error opening virtual connection over multiplexed connection&quot;</span><span style="color:#24292E;">, var13);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> var1;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br></div></div><h2 id="要点" tabindex="-1">要点 <a class="header-anchor" href="#要点" aria-label="Permalink to &quot;要点&quot;">​</a></h2><ul><li>手写RPC时 <ul><li>序列化的 <ul><li>包名和类名必须一致</li></ul></li></ul></li></ul><h2 id="时序图" tabindex="-1">时序图 <a class="header-anchor" href="#时序图" aria-label="Permalink to &quot;时序图&quot;">​</a></h2><p><img src="`+e+'" alt="RMI_Service_Invoker.png"></p>',95),c=[t];function E(y,i,b,u,F,m){return n(),a("div",null,c)}const h=s(r,[["render",E]]);export{v as __pageData,h as default};
